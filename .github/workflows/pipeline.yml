name: Deploy Backend to ECR

on:
    push:
      branches: [master]
    pull_request:
      branches: [master]

jobs:
  test:
    name: Run Tests
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Run unit tests
        run: npm run test:unit

  deploy:
    name: Build and Deploy to ECS
    needs: test
    runs-on: ubuntu-latest

    permissions:
      id-token: write
      contents: read

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          role-to-assume: ${{ secrets.AWS_ROLE_ARN }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to Amazon ECR
        uses: aws-actions/amazon-ecr-login@v2

      - name: Build and push Docker image
        run: |
          ECR_REGISTRY=$(aws sts get-caller-identity --query 'Account' --output text).dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com
          IMAGE_TAG=${{ github.event.pull_request.number }}
          docker build -t $ECR_REGISTRY/autodocs-backend:$IMAGE_TAG .
          docker push $ECR_REGISTRY/autodocs-backend:$IMAGE_TAG
          docker tag $ECR_REGISTRY/autodocs-backend:$IMAGE_TAG $ECR_REGISTRY/autodocs-backend:latest
          docker push $ECR_REGISTRY/autodocs-backend:latest