name: Backend Pipeline

on:
  push:
    branches: [master]
  pull_request:
    branches: [master]

jobs:
  test:
    name: Install dependencies & Run Tests ðŸ§ª
    runs-on: ubuntu-latest

    services:
        mongodb:
          image: mongo:6
          env:
            MONGO_INITDB_ROOT_USERNAME: ${{ secrets.MONGO_INITDB_ROOT_USERNAME }}
            MONGO_INITDB_ROOT_PASSWORD: ${{ secrets.MONGO_INITDB_ROOT_PASSWORD }}
          ports:
            - 27017:27017
          options: >-
            --health-cmd mongosh
            --health-interval 10s
            --health-timeout 5s
            --health-retries 5
    env:
        MONGO_URI: mongodb://${{ secrets.MONGO_INITDB_ROOT_USERNAME }}:${{ secrets.MONGO_INITDB_ROOT_PASSWORD }}@localhost:27017
        NODE_ENV: test

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'
          cache: 'npm'
  
      - name: Install dependencies
        run: npm install
        
      - name: Generate JWT Keys
        run: |
          mkdir -p $GITHUB_WORKSPACE/keys
          openssl genpkey -algorithm RSA -out $GITHUB_WORKSPACE/keys/private.pem -pkeyopt rsa_keygen_bits:2048
          openssl rsa -pubout -in $GITHUB_WORKSPACE/keys/private.pem -out $GITHUB_WORKSPACE/keys/public.pem

      - name: Run test
        run: npm run test:unit

  Build:
    name: Build
    needs: test
    runs-on: ubuntu-latest

    permissions:
      id-token: write
      contents: read

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Cache Docker layers
        uses: actions/cache@v3
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-

      - name: Build Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          push: false
          load: true
          tags: autodocs-backend:${{ secrets.API_VERSION }}.${{ github.sha }}
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache-new,mode=max
          build-args: |
            PORT=${{ secrets.PORT }}
            APP_NAME=${{ secrets.APP_NAME }}
            NODE_ENV=${{ secrets.NODE_ENV }}
            IS_ELASTIC_CONFIGURED=${{ secrets.IS_ELASTIC_CONFIGURED }}
            ELASTIC_URL=${{ secrets.ELASTIC_URL }}
            BASE_URL=${{ secrets.BASE_URL }}
            CORS_ORIGINS=${{ secrets.CORS_ORIGINS }}
            COOKIE_SECRET=${{ secrets.COOKIE_SECRET }}
            API_VERSION=${{ secrets.API_VERSION }}
            JWT_PRIVATE_KEY_PATH=${{ secrets.JWT_PRIVATE_KEY_PATH }}
            JWT_PUBLIC_KEY_PATH=${{ secrets.JWT_PUBLIC_KEY_PATH }}
            JWT_ACCESS_EXPIRATION=${{ secrets.JWT_ACCESS_EXPIRATION }}
            JWT_REFRESH_EXPIRATION=${{ secrets.JWT_REFRESH_EXPIRATION }}
            MONGO_INITDB_ROOT_USERNAME=${{ secrets.MONGO_INITDB_ROOT_USERNAME }}
            MONGO_INITDB_ROOT_PASSWORD=${{ secrets.MONGO_INITDB_ROOT_PASSWORD }}
            MONGO_URI=${{ secrets.MONGO_URI }}
            REDIS_URL=${{ secrets.REDIS_URL }}
            QUEUE_NAME=${{ secrets.QUEUE_NAME }}
            MAX_RETRIES=${{ secrets.MAX_RETRIES }}
            RETRY_DELAY=${{ secrets.RETRY_DELAY }}
            JOB_TIMEOUT=${{ secrets.JOB_TIMEOUT }}
            CONCURRENCY=${{ secrets.CONCURRENCY }}
            PREFETCH_COUNT=${{ secrets.PREFETCH_COUNT }}
            POLL_INTERVAL=${{ secrets.POLL_INTERVAL }}
            MAX_TASKS_PER_CHILD=${{ secrets.MAX_TASKS_PER_CHILD }}

      - name: Move cache
        run: |
          rm -rf /tmp/.buildx-cache
          mv /tmp/.buildx-cache-new /tmp/.buildx-cache