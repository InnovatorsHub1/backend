
services:
  app:
    build:
      context: .
      dockerfile: Dockerfile
      args:
        NODE_ENV: development
    ports:
      - "3000:3000"
    volumes:
      - .:/app
      - /app/node_modules
      - coverage_data:/tmp/coverage
    environment:
      NODE_ENV: development
      MONGO_URI: mongodb://admin:password@mongodb:27017/test?authSource=admin
      REDIS_URL: redis://redis:6379
      PUPPETEER_EXECUTABLE_PATH: /usr/bin/chromium-browser
    security_opt:
      - seccomp=unconfined
    cap_add:
      - SYS_ADMIN
    shm_size: '1gb'
    command: npm run dev
    depends_on:
      - mongodb
      - redis

  mongodb:
    image: mongo:6.0
    container_name: mongodb
    ports:
      - "27017:27017"
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${MONGO_INITDB_ROOT_USERNAME}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_INITDB_ROOT_PASSWORD}
    volumes:
      - mongo_data:/data/db

  redis:  
    image: redis:latest
    container_name: redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    command: ["redis-server", "--save", "20 1", "--loglevel", "warning"]


volumes:
  mongo_data:
  coverage_data:
  redis_data: